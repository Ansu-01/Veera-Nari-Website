// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum UserType {
  YOUTH
  TRUSTED_CONTACT
  CONSULTANT
  FIRST_RESPONDER
}

model User {
  id        Int        @id @default(autoincrement())
  email     String     @unique
  username  String     @unique
  password  String
  userType  UserType   @default(YOUTH)
  locations Location[]
  comments Comment[]
  trustedEmail String?
  notifications Notification[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

// changes made
model Location {
  id        String   @id @default(uuid())
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  latitude  Float
  longitude Float
  createdAt DateTime @default(now())
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String   @db.Text
  isAnonymous Boolean @default(false)
  userId    Int
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
}

model Notification {
  id        Int      @id @default(autoincrement())
  title     String
  message   String   @db.Text
  type      String   // e.g., 'SOS', 'ALERT', 'INFO'
  isRead    Boolean  @default(false)
  location  Json?    // Store latitude and longitude
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
}
